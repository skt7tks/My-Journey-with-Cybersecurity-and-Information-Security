{
	"info": {
		"_postman_id": "1f81a9cc-6ee7-48d4-9ec1-793ea4f9e1bc",
		"name": "Test Case Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Positive Cases",
			"item": [
				{
					"name": "Add New Element",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2de2253-ab1a-4c5a-a9fd-b1697a2c1b29",
								"exec": [
									"// Check status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    console.log(\"Status code is 201\");\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Add New User - Fields Match\", function () {\r",
									"    pm.expect(response.title).to.eql(\"Test title\");\r",
									"    pm.expect(response.body).to.eql(\"This is a test post\");\r",
									"    pm.expect(response.userId).to.eql(5);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "5ec1c784-1b2b-443a-848b-6637516b0398",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Test title\",\r\n  \"body\": \"This is a test post\",\r\n  \"userId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/posts"
					},
					"response": []
				},
				{
					"name": "Add New Title Only",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fa31689-2a44-499a-b2a5-f22c6e8bdfc0",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    console.log(\"Status code is 201\")\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Add only title\", ()=> {\r",
									"    pm.expect(response.title).to.be.eql(\"Title only\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "803e8ad7-aa48-4571-a5c4-9219f45c575f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Title only\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/posts"
					},
					"response": []
				},
				{
					"name": "Get Single Element",
					"id": "d1386eae-78a4-4afd-bb5d-a36d2ec00382",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/:id",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update The Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c494a1f-0dcf-436f-96fa-85176da11923",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(\"Status code is 200\")\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Updated Successfully\", ()=>{\r",
									"    pm.expect(response.title).to.be.eql(\"Updated title\");\r",
									"    pm.expect(response.body).to.be.eql(\"Updated body\");\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Everything Remain Ok\", ()=>{\r",
									"    pm.expect(response.userId).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9ffbe5ed-e7dc-4ace-a214-f7eb85e89ba3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"title\": \"Updated title\",\r\n  \"body\": \"Updated body\",\r\n  \"userId\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/posts/1"
					},
					"response": []
				},
				{
					"name": "Partially Update The Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76fff733-99ad-4a72-8edb-49cb8f6c0a04",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(\"Status code is 200\");\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Partially Updated Successfully\", ()=>{\r",
									"    pm.expect(response.title).to.be.eql(\"Partially updated title\");\r",
									"})\r",
									"\r",
									"pm.test(\"Everything Remain Ok\", ()=>{\r",
									"    pm.expect(response.id).to.be.eql(1);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "21b58fd4-0d55-470f-91ea-a16c198842b0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Partially updated title\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/posts/1"
					},
					"response": []
				},
				{
					"name": "Delete Element",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f862fea3-17b3-4c02-8809-584bb862aeb1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(\"Status code is 200\");\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Response body is empty\", ()=>{\r",
									"    pm.expect(response).to.be.eql({})\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "16eb386c-2153-46f2-a9e9-589611df8c8f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/posts/1"
					},
					"response": []
				},
				{
					"name": "New Request",
					"id": "3974ec56-c948-4b20-8b2c-f22eea665b36",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			],
			"id": "06e59635-8e86-47b3-a497-73f41469f23d"
		},
		{
			"name": "Negative Cases Copy",
			"item": [
				{
					"name": "Get Invalid Single Element",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b34cb07-4ccf-469e-8fc4-e27577c01b67",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    console.log(\"Status code is 404\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "75a11ce6-2e68-4645-a6fa-6492b130e75e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/:id",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "99999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "859764c6-3013-4441-b0f0-1cc9656f27fe",
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"    console.log(\"Status code is 500\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9a36f3aa-4c6e-44b3-8510-04dbb32da587",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Invalid JSON,\r\n  \"body\": \"Missing quote\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/posts"
					},
					"response": []
				}
			],
			"id": "70f47f26-a73f-455d-a881-341095c284dc"
		}
	]
}